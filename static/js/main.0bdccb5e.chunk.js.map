{"version":3,"sources":["logo.svg","component/card/card-component.jsx","component/cardlist/cardlist-component.jsx","component/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","id","src","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handleChangeFunction","e","setState","searchField","target","value","console","log","state","Monsters","fetch","then","Response","json","users","this","filterdMonsters","filter","toLocaleLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,wBCGFA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,kBAAf,UACE,qBACEC,IAAG,kBAAaF,EAAMG,QAAQC,IAE9BC,IAAG,+BAA0BL,EAAMG,QAAQC,GAAxC,4BAEL,6BAAKJ,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCRXC,EAAW,SAACR,GACvB,OACE,sBAAKC,UAAU,YAAf,UACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAFvB,QCHSO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,cACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+CCG,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAeFC,qBAAuB,SAACC,GAAD,OACrB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,WAC7CC,QAAQC,IAAI,EAAKC,WAdnB,EAAKA,MAAQ,CACXC,SAAU,GACVN,YAAa,IANH,E,qDAUd,WAAqB,IAAD,OAClBO,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAEO,SAAUK,S,oBAS/C,WAKE,MAAkCC,KAAKP,MAA/BC,EAAR,EAAQA,SAAUN,EAAlB,EAAkBA,YACZa,EAAkBP,EAASQ,QAAO,SAAC/B,GAAD,OACtCA,EAAQG,KAAK6B,oBAAoBC,SAAShB,EAAYe,wBAIxD,OAFAZ,QAAQC,IAAIS,GAGV,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAcmB,KAAKf,uBAErB,cAAC,EAAD,CAAUR,SAAUwB,W,GA3CVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bdccb5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card-style.css';\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container \">\n      <img\n        alt={`Monster ${props.monster.id}`}\n        // eslint-disable-next-line no-template-curly-in-string\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport './cardlist-style.css';\nimport { Card } from '../card/card-component';\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster}></Card>\n      ))}\n      ;\n    </div>\n  );\n};\n","import React from 'react';\nimport './search-box-style.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search-box \"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './component/cardlist/cardlist-component';\nimport { SearchBox } from './component/search-box/search-box-component';\n\nclass App extends Component {\n  //creating a constructor\n\n  constructor() {\n    super();\n\n    //creating this.state and this and whatever inside it will be accessible throughout the class\n    this.state = {\n      Monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((Response) => Response.json())\n      .then((users) => this.setState({ Monsters: users }));\n  }\n\n  handleChangeFunction = (e) =>\n    this.setState({ searchField: e.target.value }, () => {\n      console.log(this.state);\n    });\n\n  //  whenever you want to iterate something you can use map()\n  render() {\n    //for searching\n    //this is same as\n    // Monsters = this.state.Monsters;\n    // searchField = this.state.searchField;\n    const { Monsters, searchField } = this.state;\n    const filterdMonsters = Monsters.filter((monster) =>\n      monster.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    console.log(filterdMonsters);\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={this.handleChangeFunction}\n        />\n        <CardList monsters={filterdMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}